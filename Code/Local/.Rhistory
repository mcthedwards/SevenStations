source("gibbs_functions.R")
source("gibbs_noise.R")
source("gibbs_sampler_noise_only.R")
source("gibbs_signal.R")
source("gibbs_sampler_with_signal.R")
# Simulate data
data = arima.sim(n = 512, model = list(ar = c(0.9, -0.9)))
# Run MCMC
mcmc = gibbs_psd(data, 10000, 5000, 1)
# Plot spectrum estimate
plot(mcmc)
# Read in Auckland temperature data
data = read.csv("annual_temp_2016.csv")
data = data[data$location=="Auckland", ]
times = data$year
temp = data$temp
# Change points
cp = c()
cp[1] = 1
for (i in 2:nrow(data)) {
cp[i] = (data$site_number[i] != data$site_number[i - 1])
}
cp = which(cp == 1)  # Auckland change points
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
quantile(mcmc$beta, probs = c(0.05, 0.5, 0.95))
# Posterior for slope
plot.ts(mcmc$beta)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
# Read in Auckland temperature data
data = read.csv("annual_temp_2016.csv")
data = data[data$location=="Wellington", ]
data
data$temp[6] = 13
times = data$year
temp = data$temp
# Change points
cp = c()
cp[1] = 1
for (i in 2:nrow(data)) {
cp[i] = (data$site_number[i] != data$site_number[i - 1])
}
cp = which(cp == 1)  # Auckland change points
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
20000, 10000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
plot.ts(psd.mean)
plot.ts(mcmc$psd.mean)
plot.ts(mcmc$psd.median)
plot.ts(mcmc$k)
plot.ts(mcmc$tau)
plot.ts(mcmc$beta)
# Read in Auckland temperature data
data = read.csv("annual_temp_2016.csv")
# data = data[data$location=="Wellington", ]
# data$temp[6] = 13  # "Impute" missing value for Wellington
data = data[data$location=="Lincoln", ]
View(data)
data$temp[is.na(data$temp)] = 12
times = data$year
temp = data$temp
# Change points
cp = c()
cp[1] = 1
for (i in 2:nrow(data)) {
cp[i] = (data$site_number[i] != data$site_number[i - 1])
}
cp = which(cp == 1)  # Auckland change points
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
20000, 10000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
20000, 10000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
plot.ts(mcmc$recon.p95)
plot.ts(mcmc$psd.mean)
plot.ts(mcmc$recon.p05)
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
30000, 20000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
plot.ts(mcmc$beta)
source("gibbs_sampler_with_signal.R")
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
source("gibbs_sampler_with_signal.R")
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
source("gibbs_sampler_with_signal.R")
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
# Read in Auckland temperature data
data = read.csv("annual_temp_2016.csv")
data = data[data$location=="Wellington", ]
data$temp[6] = 13  # "Impute" missing value for Wellington
times = data$year
temp = data$temp
# Change points
cp = c()
cp[1] = 1
for (i in 2:nrow(data)) {
cp[i] = (data$site_number[i] != data$site_number[i - 1])
}
cp = which(cp == 1)  # Auckland change points
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
Xt = matrix(1:12, ncol = 3)
Xt
apply(Xt, 2, mean)
source("gibbs_sampler_with_signal.R")
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
source("gibbs_sampler_with_signal.R")
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
Xt
apply(Xt, 2, mean)
changepoints = cp
# Define changepoints as where the new level starts
# changepoints = c(1, changepoints)
cpn = length(changepoints)
# Time domain design matrix
Xt = matrix(0, nrow = length(times), ncol = cpn + 1)
for (j in 1:(cpn-1)) {
Xt[changepoints[j]:(changepoints[j+1]-1), j] = 1  # Indicators created to show which part of intercept to estimate
}
Xt[changepoints[cpn]:length(times), cpn] = 1  # Populating last segment with 1s
Xt[, ncol(Xt)] = times  # Attach slope
Xt
#####
# Testing: Mean center all explanatory variables
Xt.means = apply(Xt, 2, mean)
Xt.means
for (j in 1:ncol(Xt)) {
Xt[, j] = Xt[, j] - Xt.means[j]
}
Xt
# Frequency domain design matrix
Xf = matrix(NA, nrow = length(times), ncol = cpn + 1)
for (j in 1:(cpn + 1)) {
Xf[, j] = fast_ft(Xt[, j])
}
Xf
data = temp
# Original data in frequency domain
data.mean = mean(data)
data = data - data.mean
yf = fast_ft(data)
plot.ts(yf)
# Use least squares estimate as starting point for signal
lm.fit = lm(data ~ Xt - 1)
coef(lm.fit)
source("gibbs_sampler_with_signal.R")
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
plot.ts(mcmc$recon.mean)
source("gibbs_sampler_with_signal.R")
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95)) * 100
plot.ts(mcmc$beta)
# Read in Auckland temperature data
data = read.csv("annual_temp_2016.csv")
data = data[data$location=="Auckland", ]
times = data$year
temp = data$temp
# Change points
cp = c()
cp[1] = 1
for (i in 2:nrow(data)) {
cp[i] = (data$site_number[i] != data$site_number[i - 1])
}
cp = which(cp == 1)  # Auckland change points
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95)) * 100
plot.ts(mcmc$k)
plot.ts(mcmc$tau)
plot.ts(mcmc$psd.mean)
plot.ts(mcmc$psd.median)
plot.ts(mcmc$psd.p05)
plot.ts(mcmc$psd.p95)
# Read in Auckland temperature data
data = read.csv("annual_temp_2016.csv")
data = data[data$location=="Lincoln", ]
data$temp[is.na(data$temp)] = 12  # "Impute" NAs for Lincoln
times = data$year
temp = data$temp
# Change points
cp = c()
cp[1] = 1
for (i in 2:nrow(data)) {
cp[i] = (data$site_number[i] != data$site_number[i - 1])
}
cp = which(cp == 1)  # Auckland change points
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95)) * 100
source("gibbs_functions.R")
source("gibbs_noise.R")
source("gibbs_sampler_noise_only.R")
source("gibbs_signal.R")
source("gibbs_sampler_with_signal.R")
# Simulate data
data = arima.sim(n = 512, model = list(ar = c(0.9, -0.9)))
# Read in Auckland temperature data
data = read.csv("annual_temp_2016.csv")
data = data[data$location=="Auckland", ]
times = data$year
temp = data$temp
# Change points
cp = c()
cp[1] = 1
for (i in 2:nrow(data)) {
cp[i] = (data$site_number[i] != data$site_number[i - 1])
}
cp = which(cp == 1)  # Auckland change points
# Run MCMC
mcmc = gibbs_temperature(temp, times, cp,
10000, 5000, 1)
# Plot signal estimate
plot(mcmc, legend.loc = NA)
# Posterior for slope
plot.ts(mcmc$beta[, ncol(mcmc$beta)])
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95))
quantile(mcmc$beta[, ncol(mcmc$beta)], probs = c(0.05, 0.5, 0.95)) * 100
